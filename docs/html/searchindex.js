Search.setIndex({"docnames": ["index", "modules", "qnm_filter"], "filenames": ["index.rst", "modules.rst", "qnm_filter.rst"], "titles": ["Welcome to QNM Filter\u2019s documentation!", "qnm_filter", "qnm_filter package"], "terms": {"index": [0, 2], "modul": [0, 1], "search": 0, "page": 0, "packag": 1, "submodul": 1, "network": 1, "add_filt": [1, 2], "cholesky_decomposit": [1, 2], "compute_snr": [1, 2], "compute_acf": [1, 2], "compute_likelihood": [1, 2], "condition_data": [1, 2], "detector_align": [1, 2], "first_index": [1, 2], "import_data_arrai": [1, 2], "import_ligo_data": [1, 2], "likelihood_vs_mass_spin": [1, 2], "sampling_n": [1, 2], "truncate_data": [1, 2], "gw_data": 1, "data": [1, 2], "condit": [1, 2], "fft_data": [1, 2], "fft_freq": [1, 2], "fft_span": [1, 2], "time": [1, 2], "time_interv": [1, 2], "filter": [1, 2], "get_mass": [1, 2], "get_model_list": [1, 2], "get_spin": [1, 2], "mass_unit": [1, 2], "single_filt": [1, 2], "total_filt": [1, 2], "nois": [1, 2], "from_acf": [1, 2], "from_asd": [1, 2], "from_psd": [1, 2], "load_noise_curv": [1, 2], "welch": [1, 2], "util": 1, "find_credible_region": [1, 2], "parallel_comput": [1, 2], "content": 1, "defin": 2, "core": 2, "class": 2, "kw": 2, "sourc": 2, "base": 2, "object": 2, "perform": 2, "ringdown": 2, "analysi": 2, "store": 2, "all": 2, "need": 2, "inform": 2, "exampl": 2, "usag": 2, "import": 2, "input": 2, "dict": 2, "model_list": 2, "2": 2, "0": 2, "l": 2, "m": 2, "n": 2, "trucat": 2, "geocent": 2, "second": 2, "t_init": 2, "1126259462": 2, "4083147": 2, "1e": 2, "3": 2, "length": 2, "window": 2, "window_width": 2, "sampl": 2, "rate": 2, "after": 2, "hz": 2, "srate": 2, "2048": 2, "sky": 2, "local": 2, "ra": 2, "1": 2, "95": 2, "dec": 2, "27": 2, "lower": 2, "limit": 2, "high": 2, "pass": 2, "flow": 2, "20": 2, "fit": 2, "import_data": 2, "h": 2, "h1_gwosc_16khz_r1": 2, "1126259447": 2, "32": 2, "hdf5": 2, "original_data": 2, "mass": 2, "68": 2, "5": 2, "chi": 2, "69": 2, "final_likelihood": 2, "apply_filt": 2, "true": 2, "attribut": 2, "dictionari": 2, "contain": 2, "unfilt": 2, "each": 2, "detector": 2, "filtered_data": 2, "acf": 2, "autocovari": 2, "function": 2, "start_tim": 2, "start": 2, "determin": 2, "specifi": 2, "locat": 2, "cholesky_l": 2, "choleski": 2, "decomposit": 2, "covari": 2, "matrix": 2, "inverse_cholesky_l": 2, "invers": 2, "float": 2, "right": 2, "ascens": 2, "radian": 2, "declin": 2, "width": 2, "method": 2, "kwarg": 2, "appli": 2, "ration": 2, "none": 2, "comput": 2, "c": 2, "tl": 2, "templat": 2, "ifo": 2, "optim": 2, "match": 2, "snr": 2, "paramet": 2, "ndarrai": 2, "seri": 2, "string": 2, "name": 2, "interferomet": 2, "bool": 2, "attr_nam": 2, "estim": 2, "likelihood": 2, "return": 2, "The": 2, "set": 2, "differ": 2, "us": 2, "properti": 2, "find": 2, "point": 2, "i": 2, "closet": 2, "choosen": 2, "i0_dict": 2, "indic": 2, "add": 2, "dynam": 2, "exist": 2, "stamp": 2, "filenam": 2, "read": 2, "from": 2, "disk": 2, "support": 2, "onli": 2, "file": 2, "download": 2, "http": 2, "www": 2, "gw": 2, "opensci": 2, "org": 2, "m_est": 2, "chi_est": 2, "given": 2, "spin": 2, "solar": 2, "dimensionless": 2, "correspond": 2, "int": 2, "number": 2, "should": 2, "same": 2, "truncat": 2, "arrai": 2, "network_data": 2, "select": 2, "segment": 2, "ar": 2, "manipul": 2, "arg": 2, "gravit": 2, "str": 2, "dt": 2, "t0": 2, "fhigh": 2, "trim": 2, "25": 2, "remove_mean": 2, "credit": 2, "thi": 2, "git": 2, "github": 2, "com": 2, "maxisi": 2, "cond_data": 2, "fft": 2, "wave": 2, "angular": 2, "frequenc": 2, "span": 2, "interv": 2, "remnant": 2, "list": 2, "quasinorm": 2, "mode": 2, "static": 2, "convert": 2, "unit": 2, "normalized_freq": 2, "evalu": 2, "freq": 2, "total": 2, "remov": 2, "psd": 2, "one": 2, "side": 2, "power": 2, "spectral": 2, "densiti": 2, "asd": 2, "amplitud": 2, "autocorrel": 2, "signal": 2, "domain": 2, "noisi": 2, "txt": 2, "dat": 2, "target": 2, "have": 2, "two": 2, "column": 2, "could": 2, "option": 2, "default": 2, "": 2, "calcul": 2, "plot": 2, "array2d": 2, "num_cpu": 2, "target_prob": 2, "9": 2, "log": 2, "contour": 2, "enclos": 2, "desir": 2, "probabl": 2, "2d": 2, "cpu": 2, "parallel": 2, "result": 2, "abov": 2, "which": 2, "ha": 2, "rais": 2, "valueerror": 2, "when": 2, "cannot": 2, "found": 2, "self": 2, "m_arr": 2, "chi_arr": 2, "take": 2, "argument": 2, "reshaped_result": 2, "shape": 2, "len": 2, "x_arr": 2, "y_arr": 2, "project_to_1d": [1, 2], "delta_mass": 2, "delta_chi": 2, "project": 2, "1d": 2, "whose": 2, "integr": 2, "normal": 2, "step": 2, "size": 2, "both": 2}, "objects": {"": [[2, 0, 0, "-", "qnm_filter"]], "qnm_filter": [[2, 0, 0, "-", "Network"], [2, 0, 0, "-", "gw_data"], [2, 0, 0, "-", "utility"]], "qnm_filter.Network": [[2, 1, 1, "", "Network"]], "qnm_filter.Network.Network": [[2, 2, 1, "", "add_filter"], [2, 2, 1, "", "cholesky_decomposition"], [2, 2, 1, "", "compute_SNR"], [2, 2, 1, "", "compute_acfs"], [2, 2, 1, "", "compute_likelihood"], [2, 2, 1, "", "condition_data"], [2, 2, 1, "", "detector_alignment"], [2, 3, 1, "", "first_index"], [2, 2, 1, "", "import_data_array"], [2, 2, 1, "", "import_ligo_data"], [2, 2, 1, "", "likelihood_vs_mass_spin"], [2, 3, 1, "", "sampling_n"], [2, 2, 1, "", "truncate_data"]], "qnm_filter.gw_data": [[2, 1, 1, "", "Data"], [2, 1, 1, "", "Filter"], [2, 1, 1, "", "Noise"]], "qnm_filter.gw_data.Data": [[2, 2, 1, "", "condition"], [2, 3, 1, "", "fft_data"], [2, 3, 1, "", "fft_freq"], [2, 3, 1, "", "fft_span"], [2, 3, 1, "", "time"], [2, 3, 1, "", "time_interval"]], "qnm_filter.gw_data.Filter": [[2, 3, 1, "", "get_mass"], [2, 3, 1, "", "get_model_list"], [2, 3, 1, "", "get_spin"], [2, 2, 1, "", "mass_unit"], [2, 2, 1, "", "single_filter"], [2, 2, 1, "", "total_filter"]], "qnm_filter.gw_data.Noise": [[2, 2, 1, "", "from_acf"], [2, 2, 1, "", "from_asd"], [2, 2, 1, "", "from_psd"], [2, 2, 1, "", "load_noise_curve"], [2, 2, 1, "", "welch"]], "qnm_filter.utility": [[2, 4, 1, "", "find_credible_region"], [2, 4, 1, "", "parallel_compute"], [2, 4, 1, "", "project_to_1d"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "qnm": 0, "filter": 0, "": 0, "document": 0, "indic": 0, "tabl": 0, "qnm_filter": [1, 2], "packag": 2, "submodul": 2, "network": 2, "modul": 2, "gw_data": 2, "util": 2, "content": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to QNM Filter\u2019s documentation!": [[0, "welcome-to-qnm-filter-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "qnm_filter": [[1, "qnm-filter"]], "qnm_filter package": [[2, "qnm-filter-package"]], "Submodules": [[2, "submodules"]], "qnm_filter.Network module": [[2, "module-qnm_filter.Network"]], "qnm_filter.gw_data module": [[2, "module-qnm_filter.gw_data"]], "qnm_filter.utility module": [[2, "module-qnm_filter.utility"]], "Module contents": [[2, "module-qnm_filter"]]}, "indexentries": {"module": [[0, "module-qnm_filter"], [2, "module-qnm_filter"], [2, "module-qnm_filter.Network"], [2, "module-qnm_filter.gw_data"], [2, "module-qnm_filter.utility"]], "qnm_filter": [[0, "module-qnm_filter"], [2, "module-qnm_filter"]], "data (class in qnm_filter.gw_data)": [[2, "qnm_filter.gw_data.Data"]], "filter (class in qnm_filter.gw_data)": [[2, "qnm_filter.gw_data.Filter"]], "network (class in qnm_filter.network)": [[2, "qnm_filter.Network.Network"]], "noise (class in qnm_filter.gw_data)": [[2, "qnm_filter.gw_data.Noise"]], "add_filter() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.add_filter"]], "cholesky_decomposition() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.cholesky_decomposition"]], "compute_snr() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.compute_SNR"]], "compute_acfs() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.compute_acfs"]], "compute_likelihood() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.compute_likelihood"]], "condition() (qnm_filter.gw_data.data method)": [[2, "qnm_filter.gw_data.Data.condition"]], "condition_data() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.condition_data"]], "detector_alignment() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.detector_alignment"]], "fft_data (qnm_filter.gw_data.data property)": [[2, "qnm_filter.gw_data.Data.fft_data"]], "fft_freq (qnm_filter.gw_data.data property)": [[2, "qnm_filter.gw_data.Data.fft_freq"]], "fft_span (qnm_filter.gw_data.data property)": [[2, "qnm_filter.gw_data.Data.fft_span"]], "find_credible_region() (in module qnm_filter.utility)": [[2, "qnm_filter.utility.find_credible_region"]], "first_index (qnm_filter.network.network property)": [[2, "qnm_filter.Network.Network.first_index"]], "from_acf() (qnm_filter.gw_data.noise method)": [[2, "qnm_filter.gw_data.Noise.from_acf"]], "from_asd() (qnm_filter.gw_data.noise method)": [[2, "qnm_filter.gw_data.Noise.from_asd"]], "from_psd() (qnm_filter.gw_data.noise method)": [[2, "qnm_filter.gw_data.Noise.from_psd"]], "get_mass (qnm_filter.gw_data.filter property)": [[2, "qnm_filter.gw_data.Filter.get_mass"]], "get_model_list (qnm_filter.gw_data.filter property)": [[2, "qnm_filter.gw_data.Filter.get_model_list"]], "get_spin (qnm_filter.gw_data.filter property)": [[2, "qnm_filter.gw_data.Filter.get_spin"]], "import_data_array() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.import_data_array"]], "import_ligo_data() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.import_ligo_data"]], "likelihood_vs_mass_spin() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.likelihood_vs_mass_spin"]], "load_noise_curve() (qnm_filter.gw_data.noise method)": [[2, "qnm_filter.gw_data.Noise.load_noise_curve"]], "mass_unit() (qnm_filter.gw_data.filter static method)": [[2, "qnm_filter.gw_data.Filter.mass_unit"]], "parallel_compute() (in module qnm_filter.utility)": [[2, "qnm_filter.utility.parallel_compute"]], "project_to_1d() (in module qnm_filter.utility)": [[2, "qnm_filter.utility.project_to_1d"]], "qnm_filter.network": [[2, "module-qnm_filter.Network"]], "qnm_filter.gw_data": [[2, "module-qnm_filter.gw_data"]], "qnm_filter.utility": [[2, "module-qnm_filter.utility"]], "sampling_n (qnm_filter.network.network property)": [[2, "qnm_filter.Network.Network.sampling_n"]], "single_filter() (qnm_filter.gw_data.filter method)": [[2, "qnm_filter.gw_data.Filter.single_filter"]], "time (qnm_filter.gw_data.data property)": [[2, "qnm_filter.gw_data.Data.time"]], "time_interval (qnm_filter.gw_data.data property)": [[2, "qnm_filter.gw_data.Data.time_interval"]], "total_filter() (qnm_filter.gw_data.filter method)": [[2, "qnm_filter.gw_data.Filter.total_filter"]], "truncate_data() (qnm_filter.network.network method)": [[2, "qnm_filter.Network.Network.truncate_data"]], "welch() (qnm_filter.gw_data.noise method)": [[2, "qnm_filter.gw_data.Noise.welch"]]}})